openapi: 3.0.3
info:
  title: JASMIN Account API
  version: 1.0.0
  description: Account and service data for the jasmin-account portal.
paths:
  /api/v1/categories/:
    get:
      operationId: categories_list
      description: Details of services categories.
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - categories
      security:
        - oauth2:
            - jasmin.services.categories.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryList"
          description: ""
  /api/v1/categories/{name}/:
    get:
      operationId: categories_retrieve
      description: Details of services categories.
      parameters:
        - in: path
          name: name
          schema:
            type: string
            description: Short name for the category, used in URLs
          required: true
      tags:
        - categories
      security:
        - oauth2:
            - jasmin.services.categories.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: ""
  /api/v1/services/:
    get:
      operationId: services_list
      description: View and get details of a service.
      parameters:
        - in: query
          name: category
          schema:
            type: integer
        - in: query
          name: ceda_managed
          schema:
            type: boolean
        - in: query
          name: hidden
          schema:
            type: boolean
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - services
      security:
        - oauth2:
            - jasmin.services.services.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceList"
          description: ""
  /api/v1/services/{id}/:
    get:
      operationId: services_retrieve
      description: View and get details of a service.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this service.
          required: true
      tags:
        - services
      security:
        - oauth2:
            - jasmin.services.services.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
          description: ""
  /api/v1/services/{id}/roles/:
    get:
      operationId: services_roles_retrieve
      description: List roles in a services and their holders.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this service.
          required: true
      tags:
        - services
      security:
        - oauth2:
            - jasmin.services.serviceroles.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
          description: ""
  /api/v1/users/:
    get:
      operationId: users_list
      description: View jasmin_auth Users.
      parameters:
        - in: query
          name: institution
          schema:
            type: integer
        - in: query
          name: is_active
          schema:
            type: boolean
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: service_user
          schema:
            type: boolean
      tags:
        - users
      security:
        - oauth2:
            - jasmin.auth.users.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserList"
          description: ""
  /api/v1/users/{username}/:
    get:
      operationId: users_retrieve
      description: View jasmin_auth Users.
      parameters:
        - in: path
          name: username
          schema:
            type: string
            description:
              Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
          required: true
      tags:
        - users
      security:
        - oauth2:
            - jasmin.auth.users.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
  /api/v1/users/{username}/services/:
    get:
      operationId: users_services_retrieve
      description: List the services of a given user.
      parameters:
        - in: path
          name: username
          schema:
            type: string
            description:
              Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
          required: true
      tags:
        - users
      security:
        - oauth2:
            - jasmin.services.userservices.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceList"
          description: ""
components:
  schemas:
    Access:
      type: object
      description: List of service accesses.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: "#/components/schemas/ServiceUser"
      required:
        - id
        - user
    Account:
      type: object
      properties:
        username:
          type: string
          pattern: ^[a-z0-9_]+$
          maxLength: 20
          minLength: 3
        surname:
          type: string
          maxLength: 100
        full_name:
          type: string
          maxLength: 200
        ssh_key:
          type: string
          title: SSH Public Key
          description:
            For help generating SSH keys, see <a href="https://help.jasmin.ac.uk/article/185-generate-ssh-key-pair">the
            JASMIN documentation</a>
        tags:
          type: string
        uidNumber:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Leave blank for default (next available uidNumber)
        uid:
          type: string
          description: This is always overridden to match username
          maxLength: 50
        homeDirectory:
          type: string
          description: Leave blank for default (/home/users/{user})
          maxLength: 250
        gidNumber:
          type: integer
          maximum: 2147483647
          minimum: 0
        loginShell:
          type: string
          maxLength: 250
      required:
        - full_name
        - surname
        - username
    BlankEnum:
      enum:
        - ""
    Category:
      type: object
      description: Details of a service category.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: Short name for the category, used in URLs
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        long_name:
          type: string
          description: Long name for the category, used for display
          maxLength: 250
        position:
          type: integer
          maximum: 2147483647
          minimum: 0
          description:
            Number defining where the category appears in listings. Categories
            are ordered in ascending order by this field, then alphabetically by name
            within that.
        services:
          type: array
          items:
            $ref: "#/components/schemas/CategoryService"
      required:
        - id
        - long_name
        - name
        - services
        - url
    CategoryList:
      type: object
      description: Basic information about a service category.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: Short name for the category, used in URLs
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
        - id
        - name
        - url
    CategoryService:
      type: object
      description: Simple details about a service, excluding it's category.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: The name of the service. This is also used in URLs.
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        summary:
          type: string
          description:
            One-line description of the service, shown in listings. No
            special formatting allowed.
        hidden:
          type: boolean
          description:
            Prevents the service appearing in listings unless the user
            has an active grant or request for it. The service details page will still
            be accessible to anybody who knows the URL.
      required:
        - id
        - name
        - summary
        - url
    DegreeEnum:
      enum:
        - First degree
        - Postgraduate Master's
        - Doctorate
        - Other
      type: string
    DisciplineEnum:
      enum:
        - Atmospheric Physics
        - Atmospheric Chemistry
        - Climate Change
        - Earth System Science
        - Marine Science
        - Terrestrial and Fresh Water
        - Earth Observation
        - Polar Science
        - Geography
        - Engineering
        - Medical/Biological Sciences
        - Mathematics/Computer Science
        - Economics
        - Other
      type: string
    InstitutionList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
      required:
        - id
        - name
    InstutionCountriesEnum:
      enum:
        - GB
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BQ
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - CV
        - KH
        - CM
        - CA
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CW
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - SZ
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - KP
        - MK
        - MP
        - "NO"
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RE
        - RO
        - RU
        - RW
        - BL
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - RS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - KR
        - SS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - UG
        - UA
        - AE
        - UM
        - US
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW
      type: string
    Role:
      type: object
      description: Detail of role with holders.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Role name
          maxLength: 50
        accesses:
          type: array
          items:
            $ref: "#/components/schemas/Access"
      required:
        - accesses
        - id
        - name
    RoleList:
      type: object
      description: Basic list of roles.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Role name
          maxLength: 50
      required:
        - id
        - name
    Service:
      type: object
      description: Full details of a service.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: The name of the service. This is also used in URLs.
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        category:
          $ref: "#/components/schemas/CategoryList"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleList"
        summary:
          type: string
          description:
            One-line description of the service, shown in listings. No
            special formatting allowed.
        description:
          type: string
          nullable: true
          description:
            Full description of the service, shown on the details page.
            Markdown formatting is allowed.
        approver_message:
          type: string
          nullable: true
          description:
            Service specific instructions to be added to the external approver
            message.
        instution_countries:
          description:
            Coutries a user's institute must be located to begin approval.
            Hold ctrl or cmd for mac to select multiple countries. Leave blank for
            any country.
          type: array
          items:
            $ref: "#/components/schemas/InstutionCountriesEnum"
        hidden:
          type: boolean
          description:
            Prevents the service appearing in listings unless the user
            has an active grant or request for it. The service details page will still
            be accessible to anybody who knows the URL.
        position:
          type: integer
          maximum: 2147483647
          minimum: 0
          description:
            Number defining where the service appears in listings. Services
            are ordered in ascending order by category, then by this field, then alphabetically
            by name.
        ceda_managed:
          type: boolean
          description: Whether the service is managed by CEDA.
      required:
        - category
        - id
        - name
        - roles
        - summary
        - url
    ServiceList:
      type: object
      description: Simple details about a service.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        category:
          $ref: "#/components/schemas/CategoryList"
        name:
          type: string
          description: The name of the service. This is also used in URLs.
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        summary:
          type: string
          description:
            One-line description of the service, shown in listings. No
            special formatting allowed.
        hidden:
          type: boolean
          description:
            Prevents the service appearing in listings unless the user
            has an active grant or request for it. The service details page will still
            be accessible to anybody who knows the URL.
      required:
        - category
        - id
        - name
        - summary
        - url
    ServiceUser:
      type: object
      description: Basic UserSerializer to provide a link to the full one.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
      required:
        - id
        - url
        - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        account:
          $ref: "#/components/schemas/Account"
        last_login:
          type: string
          format: date-time
        is_superuser:
          type: boolean
          title: Superuser status
          description:
            Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description:
            Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        discipline:
          allOf:
            - $ref: "#/components/schemas/DisciplineEnum"
          description:
            Please select the closest match to the discipline that you
            work in
        degree:
          description: The type of degree you are studying for, if applicable
          oneOf:
            - $ref: "#/components/schemas/DegreeEnum"
            - $ref: "#/components/schemas/BlankEnum"
        internal_comment:
          type: string
          description:
            Internal notes about the user that will not be displayed to
            the user
        service_user:
          type: boolean
          description:
            Indicates if this user is a service user, i.e. a user that
            exists to run a service rather than a regular user account.
        email_confirmed_at:
          type: string
          format: date-time
        conditions_accepted_at:
          type: string
          format: date-time
        approved_for_root_at:
          type: string
          format: date-time
        user_reason:
          type: string
          title: Reason for suspension (user)
          description: Indicate why the user has been suspended
        internal_reason:
          type: string
          title: Reason for suspension (internal)
          description:
            Any internal details about the user's suspension that should
            not be displayed to the user
        institution:
          $ref: "#/components/schemas/InstitutionList"
        otp_required:
          type: boolean
          title: OTP required?
          description:
            Indicates if OTP verification is required at all times for
            this user.
        event:
          type: string
          format: uri
          nullable: true
          description: Training event account has been set up for.
        responsible_users:
          type: array
          items:
            $ref: "#/components/schemas/UserList"
      required:
        - account
        - approved_for_root_at
        - conditions_accepted_at
        - date_joined
        - discipline
        - email_confirmed_at
        - first_name
        - id
        - institution
        - last_login
        - last_name
        - responsible_users
        - username
    UserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        institution:
          $ref: "#/components/schemas/InstitutionList"
        service_user:
          type: boolean
          description:
            Indicates if this user is a service user, i.e. a user that
            exists to run a service rather than a regular user account.
        is_active:
          type: boolean
          title: Active
          description:
            Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
        - first_name
        - id
        - institution
        - last_name
        - url
        - username
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: https://accounts.jasmin.ac.uk/oauth/token/
          scopes:
            jasmin.services.serviceroles.all:read:
              View all the roleholders for any
              service.
            jasmin.services.categories.all:read:
              View basic information about all
              service categories.
            jasmin.auth.users.all:read: View all user information about all users.
            https://slcs.jasmin.ac.uk/certificate.test:
              Obtain short-lived user certificate
              (test)
            https://slcs.jasmin.ac.uk/certificate/: Obtain short-lived user certificate
            https://accounts.jasmin.ac.uk/oauth/introspect/: Introspect OAuth tokens
            https://accounts.jasmin.ac.uk/oauth/register_scope/:
              Register additional
              scopes
            https://accounts.jasmin.ac.uk/api/profile/:
              Access your basic profile
              information
            https://accounts.jasmin.ac.uk/api/services/: Access your current services
            https://accounts.jasmin.ac.uk/api/email/:
              Check if your email requires
              reconfirmation
            jasmin.services.services.all:read: View basic information about all services.
            jasmin.services.userservices.all:read:
              View all the services any user
              is part of.
