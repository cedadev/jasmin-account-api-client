openapi: 3.0.3
info:
  title: JASMIN Account API
  version: 1.0.0
  description: Account and service data for the jasmin-account portal.
paths:
  /api/email/:
    get:
      operationId: api_email_retrieve
      description: |-
        This view provides the legacy /email/ api view.

        It lists users who need to reconfirm their email addresses.
      tags:
        - api
      deprecated: true
      responses:
        "200":
          description: No response body
  /api/profile/:
    get:
      operationId: api_profile_list
      description: |-
        This view provides the legacy /profile/ api view.

        OAuth protected endpoint that returns basic profile information about the
        logged in user.
      tags:
        - api
      deprecated: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/LegacyProfile"
          description: ""
  /api/services/:
    get:
      operationId: api_services_retrieve
      description: |-
        This view provides the legacy /services/ api view.

        OAuth protected endpoint that returns basic information about the services
        and roles for which the user has and active grant that is not revoked or
        expired.
      tags:
        - api
      deprecated: true
      responses:
        "200":
          description: No response body
  /api/v1/categories/:
    get:
      operationId: categories_list
      description: Details of services categories.
      parameters:
        - in: query
          name: name
          schema:
            type: string
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - categories
      security:
        - oauth2:
            - jasmin.services.categories.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/CategoryList"
          description: ""
  /api/v1/categories/{category_name}/services/:
    get:
      operationId: categories_services_list
      description: |-
        Viewset to allow services to be nested under categories.

        Same as ServicesViewset, but lookup the service by name instead of pk,
        and filter by category.
      parameters:
        - in: path
          name: category_name
          schema:
            type: string
          required: true
        - in: query
          name: name
          schema:
            type: string
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - categories
      security:
        - oauth2:
            - jasmin.services.services.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceList"
          description: ""
  /api/v1/categories/{category_name}/services/{name}/:
    get:
      operationId: categories_services_retrieve
      description: |-
        Viewset to allow services to be nested under categories.

        Same as ServicesViewset, but lookup the service by name instead of pk,
        and filter by category.
      parameters:
        - in: path
          name: category_name
          schema:
            type: string
          required: true
        - in: path
          name: name
          schema:
            type: string
            description: The name of the service. This is also used in URLs.
          required: true
      tags:
        - categories
      security:
        - oauth2:
            - jasmin.services.services.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
          description: ""
  /api/v1/categories/{category_name}/services/{service_name}/roles/:
    get:
      operationId: categories_services_roles_list
      description: View roles for a service.
      parameters:
        - in: path
          name: category_name
          schema:
            type: string
          required: true
        - in: query
          name: name
          schema:
            type: array
            items:
              type: string
              title: Role name
          explode: true
          style: form
        - in: query
          name: on_date
          schema:
            type: string
            format: date
          description:
            ISO Date on which you would like to know the active roles for
            a service.
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: path
          name: service_name
          schema:
            type: string
          required: true
      tags:
        - categories
      security:
        - oauth2:
            - jasmin.services.serviceroles.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
          description: ""
  /api/v1/categories/{category_name}/services/{service_name}/roles/{name}/:
    get:
      operationId: categories_services_roles_retrieve
      description: View roles for a service.
      parameters:
        - in: path
          name: category_name
          schema:
            type: string
          required: true
        - in: path
          name: name
          schema:
            type: string
            title: Role name
          required: true
        - in: path
          name: service_name
          schema:
            type: string
          required: true
      tags:
        - categories
      security:
        - oauth2:
            - jasmin.services.serviceroles.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: ""
  /api/v1/categories/{name}/:
    get:
      operationId: categories_retrieve
      description: Details of services categories.
      parameters:
        - in: path
          name: name
          schema:
            type: string
            description: Short name for the category, used in URLs
          required: true
      tags:
        - categories
      security:
        - oauth2:
            - jasmin.services.categories.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Category"
          description: ""
  /api/v1/services/:
    get:
      operationId: services_list
      description: View and get details of a service.
      parameters:
        - in: query
          name: category
          schema:
            type: integer
        - in: query
          name: ceda_managed
          schema:
            type: boolean
        - in: query
          name: hidden
          schema:
            type: boolean
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
      tags:
        - services
      security:
        - oauth2:
            - jasmin.services.services.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceList"
          description: ""
  /api/v1/services/{id}/:
    get:
      operationId: services_retrieve
      description: View and get details of a service.
      parameters:
        - in: path
          name: id
          schema:
            type: integer
          description: A unique integer value identifying this service.
          required: true
      tags:
        - services
      security:
        - oauth2:
            - jasmin.services.services.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Service"
          description: ""
  /api/v1/services/{service_id}/roles/:
    get:
      operationId: services_roles_list
      description: View roles for a service.
      parameters:
        - in: query
          name: name
          schema:
            type: array
            items:
              type: string
              title: Role name
          explode: true
          style: form
        - in: query
          name: on_date
          schema:
            type: string
            format: date
          description:
            ISO Date on which you would like to know the active roles for
            a service.
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: path
          name: service_id
          schema:
            type: integer
          required: true
      tags:
        - services
      security:
        - oauth2:
            - jasmin.services.serviceroles.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/Role"
          description: ""
  /api/v1/services/{service_id}/roles/{name}/:
    get:
      operationId: services_roles_retrieve
      description: View roles for a service.
      parameters:
        - in: path
          name: name
          schema:
            type: string
            title: Role name
          required: true
        - in: path
          name: service_id
          schema:
            type: integer
          required: true
      tags:
        - services
      security:
        - oauth2:
            - jasmin.services.serviceroles.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Role"
          description: ""
  /api/v1/users/:
    get:
      operationId: users_list
      description: View jasmin_auth Users.
      parameters:
        - in: query
          name: institution
          schema:
            type: integer
        - in: query
          name: is_active
          schema:
            type: boolean
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: service_user
          schema:
            type: boolean
          description: Service User
        - in: query
          name: user_type
          schema:
            type: string
            enum:
              - SERVICE
              - SHARED
              - STANDARD
              - TRAINING
          description: |-
            If this account belongs to a real user, of if it has a specialised use.

            * `STANDARD` - Standard
            * `SERVICE` - Service User
            * `TRAINING` - Training Account
            * `SHARED` - Shared User
      tags:
        - users
      security:
        - oauth2:
            - jasmin.auth.users.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserList"
          description: ""
  /api/v1/users/{user_username}/grants/:
    get:
      operationId: users_grants_list
      description: Get the grants associated with a user.
      parameters:
        - in: query
          name: category
          schema:
            type: string
          description: Name of the category you would like to filter the grants for.
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - in: query
          name: role
          schema:
            type: string
          description: Name of the role you would like to filter the grants for.
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: query
          name: service
          schema:
            type: string
          description: Name of the service you would like to filter the grants for.
        - in: path
          name: user_username
          schema:
            type: string
          required: true
      tags:
        - users
      security:
        - oauth2:
            - jasmin.services.userservices.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/UserGrant"
          description: ""
  /api/v1/users/{user_username}/services/:
    get:
      operationId: users_services_list
      description: Get the services assocated with a user.
      parameters:
        - name: ordering
          required: false
          in: query
          description: Which field to use when ordering the results.
          schema:
            type: string
        - name: search
          required: false
          in: query
          description: A search term.
          schema:
            type: string
        - in: path
          name: user_username
          schema:
            type: string
          required: true
      tags:
        - users
      security:
        - oauth2:
            - jasmin.services.userservices.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: "#/components/schemas/ServiceList"
          description: ""
  /api/v1/users/{username}/:
    get:
      operationId: users_retrieve
      description: View jasmin_auth Users.
      parameters:
        - in: path
          name: username
          schema:
            type: string
            description:
              Required. 150 characters or fewer. Letters, digits and @/./+/-/_
              only.
          required: true
      tags:
        - users
      security:
        - oauth2:
            - jasmin.auth.users.all:read
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
          description: ""
components:
  schemas:
    Access:
      type: object
      description: List of service accesses.
      properties:
        id:
          type: integer
          readOnly: true
        user:
          $ref: "#/components/schemas/ServiceUser"
      required:
        - id
        - user
    Account:
      type: object
      properties:
        username:
          type: string
        surname:
          type: string
        full_name:
          type: string
        tags:
          type: array
          items: {}
        uidNumber:
          type: integer
          maximum: 2147483647
          minimum: 0
          description: Leave blank for default (next available uidNumber)
        uid:
          type: string
          description: This is always overridden to match username
          maxLength: 50
        homeDirectory:
          type: string
          description: Leave blank for default (/home/users/{user})
          maxLength: 250
        gidNumber:
          type: integer
          maximum: 2147483647
          minimum: 0
        loginShell:
          type: string
          maxLength: 250
      required:
        - tags
    BlankEnum:
      enum:
        - ""
    Category:
      type: object
      description: Details of a service category.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: Short name for the category, used in URLs
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        long_name:
          type: string
          description: Long name for the category, used for display
          maxLength: 250
        position:
          type: integer
          maximum: 2147483647
          minimum: 0
          description:
            Number defining where the category appears in listings. Categories
            are ordered in ascending order by this field, then alphabetically by name
            within that.
        services:
          type: array
          items:
            $ref: "#/components/schemas/CategoryService"
      required:
        - id
        - long_name
        - name
        - services
        - url
    CategoryList:
      type: object
      description: Basic information about a service category.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: Short name for the category, used in URLs
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
      required:
        - id
        - name
        - url
    CategoryService:
      type: object
      description: Simple details about a service, excluding it's category.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: The name of the service. This is also used in URLs.
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        summary:
          type: string
          description:
            One-line description of the service, shown in listings. No
            special formatting allowed.
        hidden:
          type: boolean
          description:
            Prevents the service appearing in listings unless the user
            has an active grant or request for it. The service details page will still
            be accessible to anybody who knows the URL.
      required:
        - id
        - name
        - summary
        - url
    DegreeEnum:
      enum:
        - First degree
        - Postgraduate Master's
        - Doctorate
        - Other
      type: string
      description: |-
        * `` - Not studying for a degree
        * `First degree` - First Degree (Bachelor's / Undergraduate Master's)
        * `Postgraduate Master's` - Postgraduate Master's
        * `Doctorate` - Doctorate
        * `Other` - Other
    DisciplineEnum:
      enum:
        - Atmospheric Physics
        - Atmospheric Chemistry
        - Climate Change
        - Earth System Science
        - Marine Science
        - Terrestrial and Fresh Water
        - Earth Observation
        - Polar Science
        - Geography
        - Engineering
        - Medical/Biological Sciences
        - Mathematics/Computer Science
        - Economics
        - Other
      type: string
      description: |-
        * `Atmospheric Physics` - Atmospheric Physics
        * `Atmospheric Chemistry` - Atmospheric Chemistry
        * `Climate Change` - Climate Change
        * `Earth System Science` - Earth System Science
        * `Marine Science` - Marine Science
        * `Terrestrial and Fresh Water` - Terrestrial and Fresh Water
        * `Earth Observation` - Earth Observation
        * `Polar Science` - Polar Science
        * `Geography` - Geography
        * `Engineering` - Engineering
        * `Medical/Biological Sciences` - Medical/Biological Sciences
        * `Mathematics/Computer Science` - Mathematics/Computer Science
        * `Economics` - Economics
        * `Other` - Other
    InstitutionCountriesEnum:
      enum:
        - GB
        - AF
        - AX
        - AL
        - DZ
        - AS
        - AD
        - AO
        - AI
        - AQ
        - AG
        - AR
        - AM
        - AW
        - AU
        - AT
        - AZ
        - BS
        - BH
        - BD
        - BB
        - BY
        - BE
        - BZ
        - BJ
        - BM
        - BT
        - BO
        - BQ
        - BA
        - BW
        - BV
        - BR
        - IO
        - BN
        - BG
        - BF
        - BI
        - CV
        - KH
        - CM
        - CA
        - KY
        - CF
        - TD
        - CL
        - CN
        - CX
        - CC
        - CO
        - KM
        - CG
        - CD
        - CK
        - CR
        - CI
        - HR
        - CU
        - CW
        - CY
        - CZ
        - DK
        - DJ
        - DM
        - DO
        - EC
        - EG
        - SV
        - GQ
        - ER
        - EE
        - SZ
        - ET
        - FK
        - FO
        - FJ
        - FI
        - FR
        - GF
        - PF
        - TF
        - GA
        - GM
        - GE
        - DE
        - GH
        - GI
        - GR
        - GL
        - GD
        - GP
        - GU
        - GT
        - GG
        - GN
        - GW
        - GY
        - HT
        - HM
        - VA
        - HN
        - HK
        - HU
        - IS
        - IN
        - ID
        - IR
        - IQ
        - IE
        - IM
        - IL
        - IT
        - JM
        - JP
        - JE
        - JO
        - KZ
        - KE
        - KI
        - KW
        - KG
        - LA
        - LV
        - LB
        - LS
        - LR
        - LY
        - LI
        - LT
        - LU
        - MO
        - MG
        - MW
        - MY
        - MV
        - ML
        - MT
        - MH
        - MQ
        - MR
        - MU
        - YT
        - MX
        - FM
        - MD
        - MC
        - MN
        - ME
        - MS
        - MA
        - MZ
        - MM
        - NA
        - NR
        - NP
        - NL
        - NC
        - NZ
        - NI
        - NE
        - NG
        - NU
        - NF
        - KP
        - MK
        - MP
        - "NO"
        - OM
        - PK
        - PW
        - PS
        - PA
        - PG
        - PY
        - PE
        - PH
        - PN
        - PL
        - PT
        - PR
        - QA
        - RE
        - RO
        - RU
        - RW
        - BL
        - SH
        - KN
        - LC
        - MF
        - PM
        - VC
        - WS
        - SM
        - ST
        - SA
        - SN
        - RS
        - SC
        - SL
        - SG
        - SX
        - SK
        - SI
        - SB
        - SO
        - ZA
        - GS
        - KR
        - SS
        - ES
        - LK
        - SD
        - SR
        - SJ
        - SE
        - CH
        - SY
        - TW
        - TJ
        - TZ
        - TH
        - TL
        - TG
        - TK
        - TO
        - TT
        - TN
        - TR
        - TM
        - TC
        - TV
        - UG
        - UA
        - AE
        - UM
        - US
        - UY
        - UZ
        - VU
        - VE
        - VN
        - VG
        - VI
        - WF
        - EH
        - YE
        - ZM
        - ZW
      type: string
      description: |-
        * `GB` - United Kingdom
        * `AF` - Afghanistan
        * `AX` - Åland Islands
        * `AL` - Albania
        * `DZ` - Algeria
        * `AS` - American Samoa
        * `AD` - Andorra
        * `AO` - Angola
        * `AI` - Anguilla
        * `AQ` - Antarctica
        * `AG` - Antigua and Barbuda
        * `AR` - Argentina
        * `AM` - Armenia
        * `AW` - Aruba
        * `AU` - Australia
        * `AT` - Austria
        * `AZ` - Azerbaijan
        * `BS` - Bahamas
        * `BH` - Bahrain
        * `BD` - Bangladesh
        * `BB` - Barbados
        * `BY` - Belarus
        * `BE` - Belgium
        * `BZ` - Belize
        * `BJ` - Benin
        * `BM` - Bermuda
        * `BT` - Bhutan
        * `BO` - Bolivia
        * `BQ` - Bonaire, Sint Eustatius and Saba
        * `BA` - Bosnia and Herzegovina
        * `BW` - Botswana
        * `BV` - Bouvet Island
        * `BR` - Brazil
        * `IO` - British Indian Ocean Territory
        * `BN` - Brunei
        * `BG` - Bulgaria
        * `BF` - Burkina Faso
        * `BI` - Burundi
        * `CV` - Cabo Verde
        * `KH` - Cambodia
        * `CM` - Cameroon
        * `CA` - Canada
        * `KY` - Cayman Islands
        * `CF` - Central African Republic
        * `TD` - Chad
        * `CL` - Chile
        * `CN` - China
        * `CX` - Christmas Island
        * `CC` - Cocos (Keeling) Islands
        * `CO` - Colombia
        * `KM` - Comoros
        * `CG` - Congo
        * `CD` - Congo (the Democratic Republic of the)
        * `CK` - Cook Islands
        * `CR` - Costa Rica
        * `CI` - Côte d'Ivoire
        * `HR` - Croatia
        * `CU` - Cuba
        * `CW` - Curaçao
        * `CY` - Cyprus
        * `CZ` - Czechia
        * `DK` - Denmark
        * `DJ` - Djibouti
        * `DM` - Dominica
        * `DO` - Dominican Republic
        * `EC` - Ecuador
        * `EG` - Egypt
        * `SV` - El Salvador
        * `GQ` - Equatorial Guinea
        * `ER` - Eritrea
        * `EE` - Estonia
        * `SZ` - Eswatini
        * `ET` - Ethiopia
        * `FK` - Falkland Islands (Malvinas)
        * `FO` - Faroe Islands
        * `FJ` - Fiji
        * `FI` - Finland
        * `FR` - France
        * `GF` - French Guiana
        * `PF` - French Polynesia
        * `TF` - French Southern Territories
        * `GA` - Gabon
        * `GM` - Gambia
        * `GE` - Georgia
        * `DE` - Germany
        * `GH` - Ghana
        * `GI` - Gibraltar
        * `GR` - Greece
        * `GL` - Greenland
        * `GD` - Grenada
        * `GP` - Guadeloupe
        * `GU` - Guam
        * `GT` - Guatemala
        * `GG` - Guernsey
        * `GN` - Guinea
        * `GW` - Guinea-Bissau
        * `GY` - Guyana
        * `HT` - Haiti
        * `HM` - Heard Island and McDonald Islands
        * `VA` - Holy See
        * `HN` - Honduras
        * `HK` - Hong Kong
        * `HU` - Hungary
        * `IS` - Iceland
        * `IN` - India
        * `ID` - Indonesia
        * `IR` - Iran
        * `IQ` - Iraq
        * `IE` - Ireland
        * `IM` - Isle of Man
        * `IL` - Israel
        * `IT` - Italy
        * `JM` - Jamaica
        * `JP` - Japan
        * `JE` - Jersey
        * `JO` - Jordan
        * `KZ` - Kazakhstan
        * `KE` - Kenya
        * `KI` - Kiribati
        * `KW` - Kuwait
        * `KG` - Kyrgyzstan
        * `LA` - Laos
        * `LV` - Latvia
        * `LB` - Lebanon
        * `LS` - Lesotho
        * `LR` - Liberia
        * `LY` - Libya
        * `LI` - Liechtenstein
        * `LT` - Lithuania
        * `LU` - Luxembourg
        * `MO` - Macao
        * `MG` - Madagascar
        * `MW` - Malawi
        * `MY` - Malaysia
        * `MV` - Maldives
        * `ML` - Mali
        * `MT` - Malta
        * `MH` - Marshall Islands
        * `MQ` - Martinique
        * `MR` - Mauritania
        * `MU` - Mauritius
        * `YT` - Mayotte
        * `MX` - Mexico
        * `FM` - Micronesia
        * `MD` - Moldova
        * `MC` - Monaco
        * `MN` - Mongolia
        * `ME` - Montenegro
        * `MS` - Montserrat
        * `MA` - Morocco
        * `MZ` - Mozambique
        * `MM` - Myanmar
        * `NA` - Namibia
        * `NR` - Nauru
        * `NP` - Nepal
        * `NL` - Netherlands
        * `NC` - New Caledonia
        * `NZ` - New Zealand
        * `NI` - Nicaragua
        * `NE` - Niger
        * `NG` - Nigeria
        * `NU` - Niue
        * `NF` - Norfolk Island
        * `KP` - North Korea
        * `MK` - North Macedonia
        * `MP` - Northern Mariana Islands
        * `NO` - Norway
        * `OM` - Oman
        * `PK` - Pakistan
        * `PW` - Palau
        * `PS` - Palestine, State of
        * `PA` - Panama
        * `PG` - Papua New Guinea
        * `PY` - Paraguay
        * `PE` - Peru
        * `PH` - Philippines
        * `PN` - Pitcairn
        * `PL` - Poland
        * `PT` - Portugal
        * `PR` - Puerto Rico
        * `QA` - Qatar
        * `RE` - Réunion
        * `RO` - Romania
        * `RU` - Russia
        * `RW` - Rwanda
        * `BL` - Saint Barthélemy
        * `SH` - Saint Helena, Ascension and Tristan da Cunha
        * `KN` - Saint Kitts and Nevis
        * `LC` - Saint Lucia
        * `MF` - Saint Martin (French part)
        * `PM` - Saint Pierre and Miquelon
        * `VC` - Saint Vincent and the Grenadines
        * `WS` - Samoa
        * `SM` - San Marino
        * `ST` - Sao Tome and Principe
        * `SA` - Saudi Arabia
        * `SN` - Senegal
        * `RS` - Serbia
        * `SC` - Seychelles
        * `SL` - Sierra Leone
        * `SG` - Singapore
        * `SX` - Sint Maarten (Dutch part)
        * `SK` - Slovakia
        * `SI` - Slovenia
        * `SB` - Solomon Islands
        * `SO` - Somalia
        * `ZA` - South Africa
        * `GS` - South Georgia and the South Sandwich Islands
        * `KR` - South Korea
        * `SS` - South Sudan
        * `ES` - Spain
        * `LK` - Sri Lanka
        * `SD` - Sudan
        * `SR` - Suriname
        * `SJ` - Svalbard and Jan Mayen
        * `SE` - Sweden
        * `CH` - Switzerland
        * `SY` - Syria
        * `TW` - Taiwan
        * `TJ` - Tajikistan
        * `TZ` - Tanzania
        * `TH` - Thailand
        * `TL` - Timor-Leste
        * `TG` - Togo
        * `TK` - Tokelau
        * `TO` - Tonga
        * `TT` - Trinidad and Tobago
        * `TN` - Tunisia
        * `TR` - Türkiye
        * `TM` - Turkmenistan
        * `TC` - Turks and Caicos Islands
        * `TV` - Tuvalu
        * `UG` - Uganda
        * `UA` - Ukraine
        * `AE` - United Arab Emirates
        * `UM` - United States Minor Outlying Islands
        * `US` - United States of America
        * `UY` - Uruguay
        * `UZ` - Uzbekistan
        * `VU` - Vanuatu
        * `VE` - Venezuela
        * `VN` - Vietnam
        * `VG` - Virgin Islands (British)
        * `VI` - Virgin Islands (U.S.)
        * `WF` - Wallis and Futuna
        * `EH` - Western Sahara
        * `YE` - Yemen
        * `ZM` - Zambia
        * `ZW` - Zimbabwe
    InstitutionList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          maxLength: 200
      required:
        - id
        - name
    LegacyProfile:
      type: object
      properties:
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
        - first_name
        - last_name
        - username
    Role:
      type: object
      description: Detail of role with holders.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Role name
          maxLength: 50
        accesses:
          type: array
          items:
            $ref: "#/components/schemas/Access"
      required:
        - accesses
        - id
        - name
    RoleList:
      type: object
      description: Basic list of roles.
      properties:
        id:
          type: integer
          readOnly: true
        name:
          type: string
          title: Role name
          maxLength: 50
      required:
        - id
        - name
    Service:
      type: object
      description: Full details of a service.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        name:
          type: string
          description: The name of the service. This is also used in URLs.
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        category:
          $ref: "#/components/schemas/CategoryList"
        roles:
          type: array
          items:
            $ref: "#/components/schemas/RoleList"
        summary:
          type: string
          description:
            One-line description of the service, shown in listings. No
            special formatting allowed.
        description:
          type: string
          nullable: true
          description:
            Full description of the service, shown on the details page.
            Markdown formatting is allowed.
        approver_message:
          type: string
          nullable: true
          description:
            Service specific instructions to be added to the external approver
            message.
        institution_countries:
          type: array
          items:
            description: |-
              Coutries a user's institute must be located to begin approval. Hold ctrl or cmd for mac to select multiple countries. Leave blank for any country.

              * `GB` - United Kingdom
              * `AF` - Afghanistan
              * `AX` - Åland Islands
              * `AL` - Albania
              * `DZ` - Algeria
              * `AS` - American Samoa
              * `AD` - Andorra
              * `AO` - Angola
              * `AI` - Anguilla
              * `AQ` - Antarctica
              * `AG` - Antigua and Barbuda
              * `AR` - Argentina
              * `AM` - Armenia
              * `AW` - Aruba
              * `AU` - Australia
              * `AT` - Austria
              * `AZ` - Azerbaijan
              * `BS` - Bahamas
              * `BH` - Bahrain
              * `BD` - Bangladesh
              * `BB` - Barbados
              * `BY` - Belarus
              * `BE` - Belgium
              * `BZ` - Belize
              * `BJ` - Benin
              * `BM` - Bermuda
              * `BT` - Bhutan
              * `BO` - Bolivia
              * `BQ` - Bonaire, Sint Eustatius and Saba
              * `BA` - Bosnia and Herzegovina
              * `BW` - Botswana
              * `BV` - Bouvet Island
              * `BR` - Brazil
              * `IO` - British Indian Ocean Territory
              * `BN` - Brunei
              * `BG` - Bulgaria
              * `BF` - Burkina Faso
              * `BI` - Burundi
              * `CV` - Cabo Verde
              * `KH` - Cambodia
              * `CM` - Cameroon
              * `CA` - Canada
              * `KY` - Cayman Islands
              * `CF` - Central African Republic
              * `TD` - Chad
              * `CL` - Chile
              * `CN` - China
              * `CX` - Christmas Island
              * `CC` - Cocos (Keeling) Islands
              * `CO` - Colombia
              * `KM` - Comoros
              * `CG` - Congo
              * `CD` - Congo (the Democratic Republic of the)
              * `CK` - Cook Islands
              * `CR` - Costa Rica
              * `CI` - Côte d'Ivoire
              * `HR` - Croatia
              * `CU` - Cuba
              * `CW` - Curaçao
              * `CY` - Cyprus
              * `CZ` - Czechia
              * `DK` - Denmark
              * `DJ` - Djibouti
              * `DM` - Dominica
              * `DO` - Dominican Republic
              * `EC` - Ecuador
              * `EG` - Egypt
              * `SV` - El Salvador
              * `GQ` - Equatorial Guinea
              * `ER` - Eritrea
              * `EE` - Estonia
              * `SZ` - Eswatini
              * `ET` - Ethiopia
              * `FK` - Falkland Islands (Malvinas)
              * `FO` - Faroe Islands
              * `FJ` - Fiji
              * `FI` - Finland
              * `FR` - France
              * `GF` - French Guiana
              * `PF` - French Polynesia
              * `TF` - French Southern Territories
              * `GA` - Gabon
              * `GM` - Gambia
              * `GE` - Georgia
              * `DE` - Germany
              * `GH` - Ghana
              * `GI` - Gibraltar
              * `GR` - Greece
              * `GL` - Greenland
              * `GD` - Grenada
              * `GP` - Guadeloupe
              * `GU` - Guam
              * `GT` - Guatemala
              * `GG` - Guernsey
              * `GN` - Guinea
              * `GW` - Guinea-Bissau
              * `GY` - Guyana
              * `HT` - Haiti
              * `HM` - Heard Island and McDonald Islands
              * `VA` - Holy See
              * `HN` - Honduras
              * `HK` - Hong Kong
              * `HU` - Hungary
              * `IS` - Iceland
              * `IN` - India
              * `ID` - Indonesia
              * `IR` - Iran
              * `IQ` - Iraq
              * `IE` - Ireland
              * `IM` - Isle of Man
              * `IL` - Israel
              * `IT` - Italy
              * `JM` - Jamaica
              * `JP` - Japan
              * `JE` - Jersey
              * `JO` - Jordan
              * `KZ` - Kazakhstan
              * `KE` - Kenya
              * `KI` - Kiribati
              * `KW` - Kuwait
              * `KG` - Kyrgyzstan
              * `LA` - Laos
              * `LV` - Latvia
              * `LB` - Lebanon
              * `LS` - Lesotho
              * `LR` - Liberia
              * `LY` - Libya
              * `LI` - Liechtenstein
              * `LT` - Lithuania
              * `LU` - Luxembourg
              * `MO` - Macao
              * `MG` - Madagascar
              * `MW` - Malawi
              * `MY` - Malaysia
              * `MV` - Maldives
              * `ML` - Mali
              * `MT` - Malta
              * `MH` - Marshall Islands
              * `MQ` - Martinique
              * `MR` - Mauritania
              * `MU` - Mauritius
              * `YT` - Mayotte
              * `MX` - Mexico
              * `FM` - Micronesia
              * `MD` - Moldova
              * `MC` - Monaco
              * `MN` - Mongolia
              * `ME` - Montenegro
              * `MS` - Montserrat
              * `MA` - Morocco
              * `MZ` - Mozambique
              * `MM` - Myanmar
              * `NA` - Namibia
              * `NR` - Nauru
              * `NP` - Nepal
              * `NL` - Netherlands
              * `NC` - New Caledonia
              * `NZ` - New Zealand
              * `NI` - Nicaragua
              * `NE` - Niger
              * `NG` - Nigeria
              * `NU` - Niue
              * `NF` - Norfolk Island
              * `KP` - North Korea
              * `MK` - North Macedonia
              * `MP` - Northern Mariana Islands
              * `NO` - Norway
              * `OM` - Oman
              * `PK` - Pakistan
              * `PW` - Palau
              * `PS` - Palestine, State of
              * `PA` - Panama
              * `PG` - Papua New Guinea
              * `PY` - Paraguay
              * `PE` - Peru
              * `PH` - Philippines
              * `PN` - Pitcairn
              * `PL` - Poland
              * `PT` - Portugal
              * `PR` - Puerto Rico
              * `QA` - Qatar
              * `RE` - Réunion
              * `RO` - Romania
              * `RU` - Russia
              * `RW` - Rwanda
              * `BL` - Saint Barthélemy
              * `SH` - Saint Helena, Ascension and Tristan da Cunha
              * `KN` - Saint Kitts and Nevis
              * `LC` - Saint Lucia
              * `MF` - Saint Martin (French part)
              * `PM` - Saint Pierre and Miquelon
              * `VC` - Saint Vincent and the Grenadines
              * `WS` - Samoa
              * `SM` - San Marino
              * `ST` - Sao Tome and Principe
              * `SA` - Saudi Arabia
              * `SN` - Senegal
              * `RS` - Serbia
              * `SC` - Seychelles
              * `SL` - Sierra Leone
              * `SG` - Singapore
              * `SX` - Sint Maarten (Dutch part)
              * `SK` - Slovakia
              * `SI` - Slovenia
              * `SB` - Solomon Islands
              * `SO` - Somalia
              * `ZA` - South Africa
              * `GS` - South Georgia and the South Sandwich Islands
              * `KR` - South Korea
              * `SS` - South Sudan
              * `ES` - Spain
              * `LK` - Sri Lanka
              * `SD` - Sudan
              * `SR` - Suriname
              * `SJ` - Svalbard and Jan Mayen
              * `SE` - Sweden
              * `CH` - Switzerland
              * `SY` - Syria
              * `TW` - Taiwan
              * `TJ` - Tajikistan
              * `TZ` - Tanzania
              * `TH` - Thailand
              * `TL` - Timor-Leste
              * `TG` - Togo
              * `TK` - Tokelau
              * `TO` - Tonga
              * `TT` - Trinidad and Tobago
              * `TN` - Tunisia
              * `TR` - Türkiye
              * `TM` - Turkmenistan
              * `TC` - Turks and Caicos Islands
              * `TV` - Tuvalu
              * `UG` - Uganda
              * `UA` - Ukraine
              * `AE` - United Arab Emirates
              * `UM` - United States Minor Outlying Islands
              * `US` - United States of America
              * `UY` - Uruguay
              * `UZ` - Uzbekistan
              * `VU` - Vanuatu
              * `VE` - Venezuela
              * `VN` - Vietnam
              * `VG` - Virgin Islands (British)
              * `VI` - Virgin Islands (U.S.)
              * `WF` - Wallis and Futuna
              * `EH` - Western Sahara
              * `YE` - Yemen
              * `ZM` - Zambia
              * `ZW` - Zimbabwe
            oneOf:
              - $ref: "#/components/schemas/InstitutionCountriesEnum"
              - $ref: "#/components/schemas/BlankEnum"
          maxItems: 250
        hidden:
          type: boolean
          description:
            Prevents the service appearing in listings unless the user
            has an active grant or request for it. The service details page will still
            be accessible to anybody who knows the URL.
        position:
          type: integer
          maximum: 2147483647
          minimum: 0
          description:
            Number defining where the service appears in listings. Services
            are ordered in ascending order by category, then by this field, then alphabetically
            by name.
        ceda_managed:
          type: boolean
          description: Whether the service is managed by CEDA.
      required:
        - category
        - id
        - institution_countries
        - name
        - roles
        - summary
        - url
    ServiceList:
      type: object
      description: Simple details about a service.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        category:
          $ref: "#/components/schemas/CategoryList"
        name:
          type: string
          description: The name of the service. This is also used in URLs.
          maxLength: 50
          pattern: ^[-a-zA-Z0-9_]+$
        summary:
          type: string
          description:
            One-line description of the service, shown in listings. No
            special formatting allowed.
        hidden:
          type: boolean
          description:
            Prevents the service appearing in listings unless the user
            has an active grant or request for it. The service details page will still
            be accessible to anybody who knows the URL.
      required:
        - category
        - id
        - name
        - summary
        - url
    ServiceUser:
      type: object
      description: Basic UserSerializer to provide a link to the full one.
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
      required:
        - id
        - url
        - username
    User:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        account:
          $ref: "#/components/schemas/Account"
        last_login:
          type: string
          format: date-time
          nullable: true
        is_superuser:
          type: boolean
          title: Superuser status
          description:
            Designates that this user has all permissions without explicitly
            assigning them.
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        is_staff:
          type: boolean
          title: Staff status
          description: Designates whether the user can log into this admin site.
        is_active:
          type: boolean
          title: Active
          description:
            Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        date_joined:
          type: string
          format: date-time
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        discipline:
          allOf:
            - $ref: "#/components/schemas/DisciplineEnum"
          description: |-
            Please select the closest match to the discipline that you work in

            * `Atmospheric Physics` - Atmospheric Physics
            * `Atmospheric Chemistry` - Atmospheric Chemistry
            * `Climate Change` - Climate Change
            * `Earth System Science` - Earth System Science
            * `Marine Science` - Marine Science
            * `Terrestrial and Fresh Water` - Terrestrial and Fresh Water
            * `Earth Observation` - Earth Observation
            * `Polar Science` - Polar Science
            * `Geography` - Geography
            * `Engineering` - Engineering
            * `Medical/Biological Sciences` - Medical/Biological Sciences
            * `Mathematics/Computer Science` - Mathematics/Computer Science
            * `Economics` - Economics
            * `Other` - Other
        degree:
          description: |-
            The type of degree you are studying for, if applicable

            * `` - Not studying for a degree
            * `First degree` - First Degree (Bachelor's / Undergraduate Master's)
            * `Postgraduate Master's` - Postgraduate Master's
            * `Doctorate` - Doctorate
            * `Other` - Other
          oneOf:
            - $ref: "#/components/schemas/DegreeEnum"
            - $ref: "#/components/schemas/BlankEnum"
        internal_comment:
          type: string
          description:
            Internal notes about the user that will not be displayed to
            the user
        service_user:
          type: boolean
          description: Service user is True if user type is SERVICE.
          readOnly: true
          nullable: true
        email_confirmed_at:
          type: string
          format: date-time
          nullable: true
        conditions_accepted_at:
          type: string
          format: date-time
          nullable: true
        approved_for_root_at:
          type: string
          format: date-time
          nullable: true
        user_reason:
          type: string
          title: Reason for suspension (user)
          description: Indicate why the user has been suspended
        internal_reason:
          type: string
          title: Reason for suspension (internal)
          description:
            Any internal details about the user's suspension that should
            not be displayed to the user
        institution:
          $ref: "#/components/schemas/InstitutionList"
        otp_required:
          type: boolean
          description: OTP is now always required.
          readOnly: true
          nullable: true
        event:
          type: string
          readOnly: true
          nullable: true
        responsible_users:
          type: array
          items:
            $ref: "#/components/schemas/UserList"
        user_type:
          allOf:
            - $ref: "#/components/schemas/UserTypeEnum"
          description: |-
            If this account belongs to a real user, of if it has a specialised use.

            * `STANDARD` - Standard
            * `SERVICE` - Service User
            * `TRAINING` - Training Account
            * `SHARED` - Shared User
        deactivated_at:
          type: string
          format: date-time
          nullable: true
          description: Date on which this account was deactivated.
      required:
        - account
        - approved_for_root_at
        - conditions_accepted_at
        - date_joined
        - discipline
        - email_confirmed_at
        - event
        - first_name
        - id
        - institution
        - last_login
        - last_name
        - otp_required
        - responsible_users
        - service_user
        - username
    UserGrant:
      type: object
      description: Simple details about a service.
      properties:
        id:
          type: integer
          readOnly: true
        service:
          allOf:
            - $ref: "#/components/schemas/ServiceList"
          readOnly: true
        role:
          allOf:
            - $ref: "#/components/schemas/RoleList"
          readOnly: true
        granted_at:
          type: string
          format: date-time
          readOnly: true
        expires:
          type: string
          format: date
          title: Expiry date
        revoked:
          type: boolean
        revoked_at:
          type: string
          format: date-time
          nullable: true
          description: Date on which this grant was revoked.
        user_reason:
          type: string
          title: Reason for revocation (user)
          description:
            '<a href="http://daringfireball.net/projects/markdown/syntax"
            target="_blank">Markdown syntax</a> allowed, but no raw HTML. Examples:
            **bold**, *italic*, indent 4 spaces for a code block.'
      required:
        - granted_at
        - id
        - role
        - service
    UserList:
      type: object
      properties:
        id:
          type: integer
          readOnly: true
        url:
          type: string
          format: uri
          readOnly: true
        username:
          type: string
          description:
            Required. 150 characters or fewer. Letters, digits and @/./+/-/_
            only.
          pattern: ^[\w.@+-]+$
          maxLength: 150
        first_name:
          type: string
          maxLength: 50
        last_name:
          type: string
          maxLength: 50
        institution:
          $ref: "#/components/schemas/InstitutionList"
        service_user:
          type: boolean
          description: Service user is True if user type is SERVICE.
          readOnly: true
          nullable: true
        is_active:
          type: boolean
          title: Active
          description:
            Designates whether this user should be treated as active. Unselect
            this instead of deleting accounts.
        email:
          type: string
          format: email
          title: Email address
          maxLength: 254
        user_type:
          allOf:
            - $ref: "#/components/schemas/UserTypeEnum"
          description: |-
            If this account belongs to a real user, of if it has a specialised use.

            * `STANDARD` - Standard
            * `SERVICE` - Service User
            * `TRAINING` - Training Account
            * `SHARED` - Shared User
      required:
        - first_name
        - id
        - institution
        - last_name
        - service_user
        - url
        - username
    UserTypeEnum:
      enum:
        - STANDARD
        - SERVICE
        - TRAINING
        - SHARED
      type: string
      description: |-
        * `STANDARD` - Standard
        * `SERVICE` - Service User
        * `TRAINING` - Training Account
        * `SHARED` - Shared User
  securitySchemes:
    oauth2:
      type: oauth2
      flows:
        clientCredentials:
          tokenUrl: /oauth/token/
          scopes:
            jasmin.projects.all:read: Read everything from the projects portal.
            https://slcs.jasmin.ac.uk/certificate.test:
              Obtain short-lived user certificate
              (test)
            email: Access your email address.
            jasmin.auth.accountmeta: Metadata about the user's JASMIN account.
            profile: Access your name and profile information using OpenID Connect.
            jasmin.projects.services.all:read: List all services in the projects portal.
            openid: Authenticate using OpenID Connect.
            https://accounts.jasmin.ac.uk/oauth/introspect/: Introspect OAuth tokens
            https://accounts.jasmin.ac.uk/oauth/register_scope/:
              Register additional
              scopes
            https://accounts.jasmin.ac.uk/api/profile/:
              Access your basic profile
              information
            https://accounts.jasmin.ac.uk/api/services/: Access your current services
            https://accounts.jasmin.ac.uk/api/email/:
              Check if your email requires
              reconfirmation
            jasmin.services.services.all:read: View basic information about all services.
            jasmin.services.userservices.all:read:
              View all the services any user
              is part of.
            jasmin.services.serviceroles.all:read:
              View all the roleholders for any
              service.
            jasmin.services.categories.all:read:
              View basic information about all
              service categories.
            jasmin.auth.users.all:read: View all user information about all users.
            https://slcs.jasmin.ac.uk/certificate/: Obtain short-lived user certificate
